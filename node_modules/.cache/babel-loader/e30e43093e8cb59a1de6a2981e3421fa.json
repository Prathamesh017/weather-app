{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pt\\\\Desktop\\\\React Projects\\\\Pomodoro  CLock\\\\src\\\\Components\\\\Clock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Buttons from './Buttons';\nimport \"./Clock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Clock() {\n  _s();\n\n  const [cycles, setCycles] = useState(0);\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(true);\n  const [hours, setHours] = useState(0);\n  const [min, setMin] = useState(0);\n  const [sec, setSec] = useState(0);\n\n  const startfunc = () => {\n    if (cycles == 0 || !cycles) {\n      alert(\"Please Enter Interval\");\n      return;\n    }\n\n    setStart(true);\n  };\n\n  const pausefunc = () => {\n    setPause(p => {\n      return !p;\n    });\n  };\n\n  const stopfunc = () => {\n    setStart(false);\n    setSec(p => {\n      return 0;\n    });\n    setMin(p => {\n      return 0;\n    });\n    setHours(p => {\n      return 0;\n    });\n  };\n\n  const getlimit = () => {\n    if (cycles % 2 === 0) {\n      return \"even\";\n    } else {\n      return \"odd\";\n    }\n  };\n\n  useEffect(() => {\n    const limit = getlimit();\n    let highlimit = \"\";\n\n    if (limit === 'even') {\n      highlimit = cycles / 2;\n    } else {\n      highlimit;\n    }\n\n    if (start && pause) {\n      const interval = setInterval(() => {\n        if (min > 9) {\n          setMin(p => {\n            return 0;\n          });\n          setHours(p => {\n            return p + 1;\n          });\n        }\n\n        if (sec < 9) {\n          setSec(p => {\n            return p + 1;\n          });\n        } else {\n          setSec(p => {\n            return 0;\n          });\n          setMin(m => {\n            return m + 1;\n          });\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [start, sec, min, pause]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"currenttitle\",\n      children: \"Focus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: [start ? `${hours}:${min}:${sec}` : `0:00:00`, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"enter intervals\",\n      onChange: e => {\n        setCycles(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startBtn\",\n        onClick: startfunc,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stopBtn\",\n        onClick: pausefunc,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resetBtn\",\n        onClick: stopfunc,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Clock, \"iQmOi1Z6sza0GH7J4qLoATPgStY=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/Pomodoro  CLock/src/Components/Clock.jsx"],"names":["React","useEffect","useState","Buttons","Clock","cycles","setCycles","start","setStart","pause","setPause","hours","setHours","min","setMin","sec","setSec","startfunc","alert","pausefunc","p","stopfunc","getlimit","limit","highlimit","interval","setInterval","m","clearInterval","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Buttons from './Buttons';\r\nimport \"./Clock.css\";\r\nfunction Clock() {\r\n\r\n\r\nconst [cycles,setCycles]=useState(0);\r\nconst [start,setStart]=useState(false);\r\nconst [pause,setPause]=useState(true);\r\nconst [hours,setHours]=useState(0);\r\nconst [min,setMin]=useState(0);\r\nconst [sec,setSec]=useState(0);\r\n\r\n\r\nconst startfunc=()=>{\r\n    if(cycles==0 || !cycles){\r\n        alert(\"Please Enter Interval\");\r\n        return;\r\n    }\r\n    \r\n    \r\n     setStart(true);\r\n    \r\n    \r\n}\r\n\r\nconst pausefunc=()=>{\r\n  setPause((p)=>{\r\n    return !p;\r\n  })\r\n}\r\n\r\nconst stopfunc=()=>{\r\n  setStart(false);\r\n  setSec((p)=>{return 0});\r\n  setMin((p)=>{return 0});\r\n  setHours((p)=>{return 0});\r\n\r\n}\r\n\r\nconst getlimit=()=>{\r\nif(cycles%2===0){\r\n return \"even\";\r\n \r\n}\r\nelse{\r\n return \"odd\";\r\n}\r\n}\r\nuseEffect(()=>{\r\n\r\nconst limit=getlimit();\r\nlet highlimit=\"\";\r\nif(limit==='even'){\r\n   highlimit=cycles/2;\r\n}\r\nelse{\r\n  highlimit\r\n}\r\n\r\n\r\n  if(start && pause){\r\n    const interval=setInterval(()=>{\r\n      \r\n      if(min>9){\r\n        setMin((p)=>{\r\n          return 0;\r\n        })\r\n        setHours((p)=>{\r\n          return p+1;\r\n        })\r\n        \r\n    }\r\n      if(sec<9){\r\n        setSec((p)=>{\r\n\r\n         \r\n          return p+1\r\n        })\r\n      }\r\n      else{\r\n        setSec((p)=>{\r\n          return 0;\r\n        })\r\n        setMin((m)=>{\r\n          return m+1;\r\n        })\r\n      }\r\n      \r\n      \r\n      },1000);\r\n      \r\n      return()=>clearInterval(interval);\r\n  }\r\n},[start,sec,min,pause])\r\n \r\n\r\n\r\n\r\n    \r\n\r\n  \r\n  return (\r\n      <div className='clock-info'>\r\n      <h1 className='currenttitle'>Focus</h1>\r\n    <div className='clock'>{start? `${hours}:${min}:${sec}` :`0:00:00`} </div>\r\n    <input type=\"number\" placeholder='enter intervals' onChange={(e)=>{setCycles(e.target.value)}}></input>\r\n    <div className=\"buttons\">\r\n        <button className='startBtn' onClick={startfunc}>Start</button>\r\n        <button className=\"stopBtn\" onClick={pausefunc}>Pause</button>\r\n        <button className='resetBtn' onClick={stopfunc}>Reset</button>\r\n    </div>\r\n      </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Clock"]},"metadata":{},"sourceType":"module"}