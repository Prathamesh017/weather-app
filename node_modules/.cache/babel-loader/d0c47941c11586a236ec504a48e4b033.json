{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pt\\\\Desktop\\\\React Projects\\\\Movie App\\\\src\\\\Components\\\\Shows\\\\ShowGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ShowCard from './ShowCard';\nimport Img_not_found from \"../../images/img_not_found.png\"; // import {useShows} from '../../misc/CustomHooks'\n\nimport { useShows } from '../misc/CustomHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowGrid = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [staredShows, dispatchStared] = useShows();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ShowGrid\",\n      children: data.map(_ref2 => {\n        let {\n          show\n        } = _ref2;\n        // {/* console.log(show.id) */}\n        const isStared = staredShows.includes(show.id);\n\n        const onStarClicked = () => {\n          if (isStared) {\n            dispatchStared({\n              type: 'REMOVE',\n              showId: show.id\n            });\n          } else {\n            dispatchStared({\n              type: 'ADD',\n              showId: show.id\n            });\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(ShowCard, {\n          id: show.id,\n          name: show.name,\n          image: show.image ? show.image.medium : Img_not_found,\n          summary: show.summary,\n          onStarClicked: onStarClicked,\n          isStared: isStared\n        }, show.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(ShowGrid, \"4lv99PQOgma+nYk8cgeleKFm8Uc=\", false, function () {\n  return [useShows];\n});\n\n_c = ShowGrid;\nexport default ShowGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowGrid\");","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/Movie App/src/Components/Shows/ShowGrid.jsx"],"names":["React","ShowCard","Img_not_found","useShows","ShowGrid","data","staredShows","dispatchStared","console","log","map","show","isStared","includes","id","onStarClicked","type","showId","name","image","medium","summary"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;;AAEA,MAAMC,QAAQ,GAAC,QAAW;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACtB,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BJ,QAAQ,EAA1C;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACJ,sBAAO;AAAA,2BAEP;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKA,IAAI,CAACK,GAAL,CAAS,SAAW;AAAA,YAAV;AAACC,UAAAA;AAAD,SAAU;AACjB;AAEA,cAAMC,QAAQ,GAACN,WAAW,CAACO,QAAZ,CAAqBF,IAAI,CAACG,EAA1B,CAAf;;AACA,cAAMC,aAAa,GAAC,MAAI;AACpB,cAAGH,QAAH,EAAY;AACRL,YAAAA,cAAc,CAAC;AAACS,cAAAA,IAAI,EAAC,QAAN;AAAgBC,cAAAA,MAAM,EAACN,IAAI,CAACG;AAA5B,aAAD,CAAd;AACH,WAFD,MAGI;AACAP,YAAAA,cAAc,CAAC;AAACS,cAAAA,IAAI,EAAC,KAAN;AAAaC,cAAAA,MAAM,EAACN,IAAI,CAACG;AAAzB,aAAD,CAAd;AACH;AACJ,SAPD;;AAQA,4BACI,QAAC,QAAD;AAEA,UAAA,EAAE,EAAEH,IAAI,CAACG,EAFT;AAGA,UAAA,IAAI,EAAEH,IAAI,CAACO,IAHX;AAIA,UAAA,KAAK,EAAEP,IAAI,CAACQ,KAAL,GAAWR,IAAI,CAACQ,KAAL,CAAWC,MAAtB,GAA6BlB,aAJpC;AAKA,UAAA,OAAO,EAAES,IAAI,CAACU,OALd;AAMA,UAAA,aAAa,EAAEN,aANf;AAOA,UAAA,QAAQ,EAAEH;AAPV,WACKD,IAAI,CAACG,EADV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAvBA;AADL;AAAA;AAAA;AAAA;AAAA;AAFO,mBAAP;AA6BC,CAjCD;;GAAMV,Q;UACgCD,Q;;;KADhCC,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport ShowCard from './ShowCard'\r\nimport Img_not_found from \"../../images/img_not_found.png\"\r\n// import {useShows} from '../../misc/CustomHooks'\r\nimport { useShows } from '../misc/CustomHook'\r\n\r\nconst ShowGrid=({data}) =>{\r\n    const[staredShows,dispatchStared]=useShows()\r\n  \r\n    console.log(data)\r\nreturn(<> \r\n\r\n<div className=\"ShowGrid\">\r\n    {data.map(({show} )=>{\r\n        // {/* console.log(show.id) */}\r\n        \r\n        const isStared=staredShows.includes(show.id);\r\n        const onStarClicked=()=>{\r\n            if(isStared){\r\n                dispatchStared({type:'REMOVE', showId:show.id})\r\n            }\r\n            else{\r\n                dispatchStared({type:'ADD', showId:show.id})\r\n            }\r\n        }\r\n        return(\r\n            <ShowCard \r\n            key={show.id} \r\n            id={show.id} \r\n            name={show.name} \r\n            image={show.image?show.image.medium:Img_not_found} \r\n            summary={show.summary}\r\n            onStarClicked={onStarClicked}\r\n            isStared={isStared}\r\n            />\r\n        )\r\n    })}\r\n</div>\r\n </>)\r\n}\r\nexport default ShowGrid"]},"metadata":{},"sourceType":"module"}